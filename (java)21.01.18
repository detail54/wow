

throws Exception -> Exception 클래스로 예외를 던진다,(처리하겠다)

****예외처리 필수****
위에처럼 throws Exception 을 사용해도 되지만 try ~ catch 로 작성해도 됌.

***String 타입으로 리턴된다..

FileInputStream - > 파일을 바이트 단위로 읽어옴.
FileOutputStream - > 파일을 바이트 단위로 생성.
BufferdReader - > 문자를 한글자씩 버퍼에 저장하여 한번에 불러옴
BufferdWriter -> 문자를 한글자씩 버퍼에 저장하여 한번에 출력. 생성

FileReader - > 파일을 문자열 형태로 읽어옴.
FIleWriter - > 파일을 문자열 형태로 생성.

***InputStreamReader - >  

		BufferedReader in
   					= new BufferedReader(new InputStreamReader(System.in));

ex) 파일 생성하여 텍스트 입력

	public static void main(String[] args) throws IOException {
		
		FileWriter fw = new FileWriter("b.txt");	//자식 클래스인 BufferedWriter 때문에 그 부모 클래스인 FileWriter로 먼저 선언해서 끌어와야함.(메소드, 클래스로 먼저 생성도가능)
		BufferedWriter out = new BufferedWriter(fw);	//이용하여 생성한 파일에 문자 작성. 키보드로 입력한 문자 한글자 한글자를 버퍼로 이동시켜 한번에 전송.
														//문자를 바로바로 전송하는것보다 한데 모아서 한번에 전송 하는게 더 효율적.
		
		out.write("안녕");
		out.newLine();			//새로운줄. 엔터역할
		out.write("오늘은 월요일");	
		out.newLine();
		out.write("aaa@naver.com");
		out.flush(); 		//버퍼를 이용하여 데이터를 처리하는거기 때문에 flush를 이용하여 버퍼에 남아있는 데이터를 모두 출력하여 클린하게 함. 
		out.close();
		
	}
	
	
ex) 파일 생성하여 내용 작성해놓은 파일 불러오기

	public static void main(String[] args) throws IOException {
		
		FileReader sw = new FileReader("b.txt");
		BufferedReader in = new BufferedReader(sw);
		
		String str;					//문자열 선언
		
		while(true) {				//무한루프 이용하여 텍스트파일 내 글자 한글자한글자 반복하여 불러옴,, 무한루프 말고도 while(조건문) 조건문 여러가지로 이용 가능. 
			str = in.readLine();	//선언한 문자열을 한줄한줄 불러온다.
			if(str==null) {			//불러올 내용이 없으면 break로 멈춤
				break; 
			}
			System.out.println(str);
		}
		in.close();				//close 필수

	}
	
	
ex) 콘솔에서 입력한 내용을 텍스트파일 생성하여 출력
	
	public static void main(String[] args) {

		BufferedReader bu = null;
		PrintWriter pr = null;
		
		try {
			InputStreamReader in = new InputStreamReader(System.in);		//콘솔에 입력.
		
			bu = new BufferedReader(in);	//BufferedReader _a_
											//				= new BufferedReader(new InputStreamReader(System.in));		 이렇게 한줄로도 작성가능.
											//콘솔에 문자를 입력하는것 까지 코드..
			FileWriter fw = new FileWriter("d.txt");		//입력한 내용을 텍스트 파일에 저장.
			pr = new PrintWriter(fw);
			
			String str = null;
											//파일 생성이 불필요. 이미 작성하여 파일을 만든 상태에서 불러오는거기때문데 FileReader 생성안함.
			while ((str = bu.readLine())!=null) {
				pr.println(str);
			}
			bu.close();
			
		}catch(Exception e) {}
		
		finally{
			pr.close();
		}
	}
	
	ex2)) 위에꺼와 같은코드. 버퍼리더와 인풋스트림리더 따로따로 생성안하고 한줄로 생성.
				//BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
	
		public static void main(String[] args) {

		
		PrintWriter pr = null;
		
		try {
			BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
											//콘솔에 문자를 입력하는것 까지 코드..
			FileWriter fw = new FileWriter("d.txt");		//입력한 내용을 텍스트 파일에 저장.
			pr = new PrintWriter(fw);
			
			String str = null;
											//파일 생성이 불필요. 이미 작성하여 파일을 만든 상태에서 불러오는거기때문데 FileReader 생성안함.
			while ((str = in.readLine())!=null) {
				pr.println(str);
			}
			in.close();
			
		}catch(Exception e) {}
		
		finally{
			pr.close();
		}
	}
	
	
			Scanner sc = new Scanner(System.in);

		while (true) {
			try {
				System.out.println("정수 2개 입력: ");
				int in = sc.nextInt();
				int in2 = sc.nextInt();
				
				System.out.println(in+in2);
				
			} catch (Exception e) {
				System.out.println("다시 입력");
				sc.nextLine();
				continue;
			}
	
	
	